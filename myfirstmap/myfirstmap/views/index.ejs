<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>myfirstmap</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <script type="text/javascript" src="https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=4dsk37rydw"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script type="text/javascript"
      src="//dapi.kakao.com/v2/maps/sdk.js?appkey=140d1701b740bb11f960733f09639c71&libraries=services"></script>
</head>
<body>
<div id="navbar">myfirstmap</div>
<div id="infoBox">
  <div id="infoTitle">현재날짜</div>
  <div id="infoContent">2023.11.07</div>
</div>
<div id="search">
  <input id="search_input" placeholder="목적지를 입력해 주세요">
  <button id="search_button">검색</button>
</div>
<div id="current">현재 위치</div>
<div id="map" style="width:100%;height:100vh;"></div>
<script type="text/javascript" src="/data/data.js"></script>
<script>
var mapOptions = {
    center: new naver.maps.LatLng(37.3595704, 127.105399),
    zoom: 10
};

var map = new naver.maps.Map('map', mapOptions);

var markerList = [];
var infowindowList = [];

for (var i in data){
  var target = data[i];
  var latlng = new naver.maps.LatLng(target.lat, target.lng);
  marker = new naver.maps.Marker({
  map: map,
  position : latlng,
  icon : {
    content : "<div class='marker'></div>",
    anchor : new naver.maps.Point(12, 12)
  },
});

var content = `<div class='infowindow_wrap'>
    <div class='infowindow_title'>${target.title}</div>
    <div class='infowindow_content'>${target.content}</div>
    <div class='infowindow_date'>${target.date}</div>
  </div>`

  var infowindow = new naver.maps.InfoWindow({
    content: content,
    backgroundColor: "#00ff0000",
    borderColor: "#00ff0000",
    anchorSize: new naver.maps.Size(0,0)
  })

  markerList.push(marker);
  infowindowList.push(infowindow);
}

for(var i=0, ii=markerList.length; i<ii; i++){
  naver.maps.Event.addListener(map, "click", ClickMap(i));
  naver.maps.Event.addListener(markerList[i],"click", getClickHandler(i));
}

function ClickMap(i) {
  return function() {
    var infowindow = infowindowList[i];
    infowindow.close();
  }
}

function getClickHandler(i) {
  return function(){
    var marker = markerList[i];
    var infowindow = infowindowList[i];
    if(infowindow.getMap()) {
      infowindow.close();
    } else {
      infowindow.open(map, marker)
    }
  }
}

let currentUse = true;

$('#current').click(()=>{
  if('geolocation' in navigator){
    navigator.geolocation.getCurrentPosition(function(position){
      const lat = position.coords.latitude;
      const lng = position.coords.longitude;
      const latlng = new naver.maps.LatLng(lat, lng);
      if (currentUse){
        marker = new naver.maps.Marker({
          map: map,
          position: latlng,
          icon : {
            content : '<img class="pulse" draggable="false" unselectable="on" src="/images/pos.png">',
            anchor : new naver.maps.Point(11, 11)
          }
        });
        currentUse = false;
      }
      map.setZoom(14,false);
      map.panTo(latlng);
    });
  } else{
    alert("위치 정보 사용 불가능");
  }
});

let ps = new kakao.maps.services.Places();
let search_arr = [];

$("#search_input").on("keydown", function(e){
  if(e.keyCode == 13){
    let content = $(this).val();
    ps.keywordSearch(content, placeSearchCB);
  }
});

$("#search_button").on("click", function(e){
  let content = $("#search_input").val();
  ps.keywordSearch(content, placeSearchCB);
})

function placeSearchCB(data, status, pagination){
  // data : 목적지를 바탕으로 검색한 결과
  // status : 카카오 서버의 상태
  // pagination : 검색 결과가 얼마나 있는지 번호로 표시
  if(status == kakao.maps.services.Status.OK){
    let target = data[0];
    const lat = target.y;
    const lng = target.x;
    const latlng = new naver.maps.LatLng(lat, lng);
    marker = new naver.maps.Marker({
      position: latlng,
      map: map
    })
    if(search_arr.length == 0) {   // 처음 목적지 검색할 때
      search_arr.push(marker);     // arr에 push
    } else {
      search_arr.push(marker);     // 이미 검색 한 번 했었으면
      let pre_marker = search_arr.splice(0,1);
      pre_marker[0].setMap(null);  // 이전 것을 추출해서 삭제
    }
    map.setZoom(14,false);
    map.panTo(latlng);
  } else {
    alert("검색 결과가 없습니다.");
  }
}

</script>
</body>
</html>